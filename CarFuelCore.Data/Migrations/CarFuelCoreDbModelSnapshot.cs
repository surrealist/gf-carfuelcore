// <auto-generated />
using CarFuelCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CarFuelCore.Data.Migrations
{
    [DbContext(typeof(CarFuelCoreDb))]
    partial class CarFuelCoreDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarFuelCore.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color")
                        .HasMaxLength(30);

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasAnnotation("AuthorName", "Suthep S");

                    b.Property<string>("Owner")
                        .HasMaxLength(40);

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarFuelCore.Models.FillUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CarId");

                    b.Property<bool>("IsFull");

                    b.Property<double>("Liters");

                    b.Property<int?>("NextFillUpId");

                    b.Property<int>("Odometer");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("NextFillUpId");

                    b.ToTable("FillUp");
                });

            modelBuilder.Entity("CarFuelCore.Models.FillUp", b =>
                {
                    b.HasOne("CarFuelCore.Models.Car")
                        .WithMany("FillUps")
                        .HasForeignKey("CarId");

                    b.HasOne("CarFuelCore.Models.FillUp", "NextFillUp")
                        .WithMany()
                        .HasForeignKey("NextFillUpId");
                });
#pragma warning restore 612, 618
        }
    }
}
